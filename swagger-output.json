{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.1",
    "title": "Social Media App",
    "description": "A social media app built with Node.js, Express, MongoDB, and TypeScript"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "basePath": "",
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication routes"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "description": "Registers a new user and returns an access token.   This endpoint allows new users to create an account by providing necessary information.  Upon successful registration, it creates a new user account and returns an access token   that can be used for subsequent authenticated requests.",
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                },
                "examples": {
                  "registrationResponse": {
                    "$ref": "#/components/examples/RegistrationResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                },
                "examples": {
                  "badRequestResponse": {
                    "$ref": "#/components/examples/BadRequestResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                },
                "examples": {
                  "internalServerErrorResponse": {
                    "$ref": "#/components/examples/InternalServerErrorResponse"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "description": "Authenticates a user and returns a token.   This endpoint allows users to log in by providing their credentials (typically email and password).   Upon successful authentication, it returns a token that can be used for subsequent authenticated requests.",
        "responses": {
          "200": {
            "description": "Login Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                },
                "examples": {
                  "loginResponse": {
                    "$ref": "#/components/examples/LoginResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                },
                "examples": {
                  "badRequestResponse": {
                    "$ref": "#/components/examples/BadRequestResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                },
                "examples": {
                  "internalServerErrorResponse": {
                    "$ref": "#/components/examples/InternalServerErrorResponse"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout a user",
        "description": "Logs out the current user.   This endpoint invalidates the user",
        "responses": {
          "200": {
            "description": "Logout Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                },
                "examples": {
                  "logoutResponse": {
                    "$ref": "#/components/examples/LogoutResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedAccessResponse"
                },
                "examples": {
                  "unauthorizedAccessResponse": {
                    "$ref": "#/components/examples/UnauthorizedAccessResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                },
                "examples": {
                  "internalServerErrorResponse": {
                    "$ref": "#/components/examples/InternalServerErrorResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh access token",
        "description": "Generate a new access token using a valid refresh token.   The refresh token must be provided in the Authorization header.",
        "responses": {
          "200": {
            "description": "Access token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                },
                "examples": {
                  "refreshTokenResponse": {
                    "$ref": "#/components/examples/RefreshTokenResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedAccessResponse"
                },
                "examples": {
                  "unauthorizedAccessResponse": {
                    "$ref": "#/components/examples/UnauthorizedAccessResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                },
                "examples": {
                  "internalServerErrorResponse": {
                    "$ref": "#/components/examples/InternalServerErrorResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Forgot Password",
        "description": "Sends a link to the user\\'s email address to reset their password.   The link will have the reset password JWT in the query params & will expire in 15 minutes.   If the user does not click on the link within 15 minutes,   the link will expire and the user will need to request a new password reset.",
        "responses": {
          "200": {
            "description": "Reset password email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                },
                "examples": {
                  "refreshTokenResponse": {
                    "$ref": "#/components/examples/ForgotPasswordResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                },
                "examples": {
                  "badRequestResponse": {
                    "$ref": "#/components/examples/BadRequestResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                },
                "examples": {
                  "internalServerErrorResponse": {
                    "$ref": "#/components/examples/InternalServerErrorResponse"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset Password",
        "description": "Resets the user\\'s password using a valid reset password token.   The reset password token must be provided in the query string.",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset password email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                },
                "examples": {
                  "resetPasswordResponse": {
                    "$ref": "#/components/examples/ResetPasswordResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                },
                "examples": {
                  "badRequestResponse": {
                    "$ref": "#/components/examples/BadRequestResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedAccessResponse"
                },
                "examples": {
                  "unauthorizedAccessResponse": {
                    "$ref": "#/components/examples/UnauthorizedAccessResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                },
                "examples": {
                  "internalServerErrorResponse": {
                    "$ref": "#/components/examples/InternalServerErrorResponse"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/chats": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "bio": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/{id}/change-password": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/friends": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/users/{id}/friend-requests": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/{id}/unfriend/{friendId}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "friendId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/{id}/suggested-friends": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/{id}/mutual-friends/{otherUserId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "otherUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/users/{id}/friendship-status/{otherUserId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "otherUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "examples": {
      "RegistrationResponse": {
        "value": {
          "success": true,
          "message": "Registration successful!",
          "data": {
            "id": "60d725b8b0d7c911b2f28f0c",
            "name": "John Doe",
            "email": "john@example.com",
            "bio": "A short bio about me",
            "profilePicture": "https://example.com/profile.jpg",
            "createdAt": "2023-06-22T10:00:00Z",
            "updatedAt": "2023-06-22T10:00:00Z",
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "expiresIn": 3600
          }
        }
      },
      "LoginResponse": {
        "value": {
          "success": true,
          "message": "Login successful!",
          "data": {
            "id": "60d725b8b0d7c911b2f28f0c",
            "name": "John Doe",
            "email": "john@example.com",
            "bio": "A short bio about me",
            "profilePicture": "https://example.com/profile.jpg",
            "createdAt": "2023-06-22T10:00:00Z",
            "updatedAt": "2023-06-22T10:00:00Z",
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "expiresIn": 3600
          }
        }
      },
      "LogoutResponse": {
        "value": {
          "success": true,
          "message": "Logout successful!",
          "data": null
        }
      },
      "RefreshTokenResponse": {
        "value": {
          "success": true,
          "message": "Access token refreshed successfully!",
          "data": {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "expiresIn": 3600
          }
        }
      },
      "ForgotPasswordResponse": {
        "value": {
          "success": true,
          "message": "Password reset email sent!",
          "data": null
        }
      },
      "ResetPasswordResponse": {
        "value": {
          "success": true,
          "message": "Password reset successfully!",
          "data": null
        }
      },
      "BadRequestResponse": {
        "value": {
          "success": false,
          "message": "Bad Request",
          "data": null
        }
      },
      "InternalServerErrorResponse": {
        "value": {
          "success": false,
          "message": "Internal Server Error",
          "data": null
        }
      },
      "UnauthorizedAccessResponse": {
        "value": {
          "success": false,
          "message": "Unauthorized access",
          "data": null
        }
      }
    },
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's full name",
            "example": ""
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": ""
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": ""
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "description": "Confirm password",
            "example": ""
          },
          "bio": {
            "type": "string",
            "description": "User's bio",
            "example": ""
          },
          "profilePicture": {
            "type": "string",
            "format": "binary",
            "description": ""
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "confirmPassword",
          "profilePicture"
        ]
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "bio": {
                "type": "string"
              },
              "profilePicture": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "accessToken": {
                "type": "string"
              },
              "expiresIn": {
                "type": "number"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": ""
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": ""
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "bio": {
                "type": "string"
              },
              "profilePicture": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "accessToken": {
                "type": "string"
              },
              "expiresIn": {
                "type": "number"
              }
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              },
              "expiresIn": {
                "type": "number"
              }
            }
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": ""
          }
        },
        "required": [
          "email"
        ]
      },
      "ForgotPasswordResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's new password",
            "example": ""
          }
        },
        "required": [
          "password"
        ]
      },
      "ResetPasswordResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "BadRequestResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "InternalServerErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "UnauthorizedAccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}